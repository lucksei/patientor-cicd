name: Deployment Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  # Build and Test job
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '24'

      # Build the frontend
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
      - name: Build frontend
        run: |
          cd frontend
          npm run build

      # Build the backend
      - name: Install backend dependencies
        run: |
          cd backend
          npm install
      - name: Build backend
        run: |
          cd backend
          npm run tsc

      # Execute tests for the backend
      - name: Run backend tests
        run: |
          cd backend
          npm run test
      
      # Execute tests for the frontend 
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test

  # Deploy Job
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Deploy to Render (Uses sws2apps/render-deployment@v2.0.0)
      - name: Render Deployment
        if: ${{ github.event_name == 'push'}}
        uses: sws2apps/render-deployment@be61eb021de9d33e994bafc5f6e1545a8cafc80e 
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
  
      # Notify Discord Deploy (Uses Ilshidur/action-discord@0.4.0)
      - name: Actions for Discord (Success)
        if: ${{ success() && github.event_name == 'push'}}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "title": "✅ Deployment Succeeded",
                "description": "The project **${{ github.repository }}** has been successfully deployed on branch `${{ github.ref_name }}`.",
                "color": 5763719
              }
            ]
        uses: Ilshidur/action-discord@d2594079a10f1d6739ee50a2471f0ca57418b554
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'
      - name: Actions for Discord (Failure)
        if: ${{ failure() && github.event_name == 'push'}}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: |
            [
              {
                "title": "❌ Deployment Failed",
                "description": "The project **${{ github.repository }}** has failed to deploy on branch `${{ github.ref_name }}`.",
                "color": 15548997
              }
            ]
        uses: Ilshidur/action-discord@d2594079a10f1d6739ee50a2471f0ca57418b554
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has failed to deploy.'

  # Automatic Versioning
  version:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Bump version (Uses anothrNick/github-tag-action@1.75.0)
      # Can use keywords #none, #major, #minor, #patch inside the commit message to bump the desired version
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' }}
        uses: anothrNick/github-tag-action@1.75.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
          PRERELEASE: true
          DEFAULT_BUMP: patch
          DRY_RUN: false # NOTE: set to true for testing without creating tags 

